---
- iri: "https://w3id.org/yet/undefined/regional-rules-ontology#"

- multiple_owl_classes:
    - GeographicEntity:
        SubClassOf: "owl:Thing"
    - NationalState:
        SubClassOf: GeographicEntity
    - FederalState:
        SubClassOf: GeographicEntity
    - District:
        SubClassOf: GeographicEntity

    - LocationType:
        SubClassOf: "owl:Thing"

    - Facility:
        SubClassOf: "owl:Thing"

    - TrainStation:
        SubClassOf:
            - Facility
            - LocationType

    # <Public Management>

    - Document:
        SubClassOf: "owl:Thing"

    - DirectiveSourceDocument:
        # Quellendokument für Regeln
        SubClassOf: Document

    # </Public Management>

    - Directive:
        SubClassOf: "owl:Thing"

    # <Relation-Concepts>
    # These concepts model n-ary relations, see https://www.w3.org/TR/swbp-n-aryRelations/#pattern1

    - X_RelationConcept:
        SubClassOf: "owl:Thing"

#    - X_DocumentReference_RC:
#        SubClassOf: X_RelationConcept
#        # note: yamlpyowl will automatically create a role `X_hasDocumentReference_RC`
#        X_associatedWithClasses:
#            - Directive
#        X_associatedRoles:
#            # key-value pairs (<role name>: <range type>)
#            hasDocument: Document
#            hasSection: str
#
#    - X_InterRegionRelation_RC:
#        SubClassOf: X_RelationConcept
#        # model a numerical relation between Regions. Say munich -> ([dresden, zwickau, passau], 0.5)
#        X_associatedWithClasses:
#            - GeographicEntity
#        X_associatedRoles:
#          hasTarget: GeographicEntity
#          hasValue: float
#
#    - X_Testing_RC:
#        SubClassOf: X_RelationConcept
#        X_associatedWithClasses:
#            Or:
#                - Directive
#                - Facility
#        X_associatedRoles:
#          hasValue1: int
#          hasValue2: float

    # </Relation-Concepts>

    - Debug:
        # A dummy class used for debugging. This will be removed in the future
        SubClassOf: "owl:Thing"

#
# #############################################################################
#


- owl_object_property:
    hasPart:
        Domain: GeographicEntity
        Range: GeographicEntity
        Characteristics:
              - Transitive
- owl_inverse_property:
    isPartOf:
        Domain: GeographicEntity
        Range: GeographicEntity
        Characteristics:
              - Transitive
        Inverse: hasPart

- owl_object_property:
    hasDirective:
        Domain: GeographicEntity
        Range: Directive

- owl_object_property:
    appliesTo:
        Domain: DirectiveSourceDocument
        Range: GeographicEntity

- owl_object_property:
    affects:
        # model if a geographic entity is affected by a rule (typically from another ge)
        Domain: Directive
        Range: GeographicEntity


    # <Relation-Concept-Roles>

    # will be created automatically

    # </Relation-Concept-Roles>

#
# #############################################################################
#
- owl_multiple_individuals:
      names:
          - leipzig
          - dresden
          - bautzen
          - zwickau
          - erzgebirgskreis
          - goerlitz
          - erlangen
          - munich
          - regensburg
          - rosenheim
          - hof
          - passau
          - bamberg
      types:
          - District
# label: Kreisfreie Stadt Passau

#    # now federal states
- owl_multiple_individuals:
      names:
          - saxony
          - bavaria
      types:
          - FederalState

- owl_individual:
    germany:
        types:
            - NationalState
        label:
            - Federal Republic of Germany
            - Bundesrepublik Deutschland

- property_facts:
    hasPart:
        Facts:
            - saxony:
                - leipzig
                - dresden
                - bautzen
                - zwickau
                - erzgebirgskreis
                - goerlitz
            - bavaria:
                - erlangen
                - munich
                - regensburg
                - rosenheim
                - hof
                - passau
                - bamberg
            - germany:
                - bavaria
                - saxony

#
#     source documents
#

- owl_multiple_individuals:
    names:
        - law_book_of_germany
        - law_book_of_saxony
        - law_book_of_bavaria
        - law_book_of_dresden
        - partially_redundant_law_book_of_dresden
    types:
        - DirectiveSourceDocument

- property_facts:
    appliesTo:
        Facts:
            - law_book_of_germany:
                  - germany
            - law_book_of_saxony:
                  - saxony
            - law_book_of_bavaria:
                  - bavaria
            - law_book_of_dresden:
                - dresden
            - partially_redundant_law_book_of_dresden:
                - dresden

#
#
#    #
#    # directives
#    #
#    dir_rule1:
#        isA: Directive
#        X_hasDocumentReference_RC:
#            hasDocument: law_book_of_germany
#            hasSection: "§ 1.1"
#
#    dir_rule2:
#        isA: Directive
#        X_hasDocumentReference_RC:
#            hasDocument: law_book_of_saxony
#            hasSection: "§ 1.5"
#
#    dir_rule3:
#        isA: Directive
#        X_hasDocumentReference_RC:
#            hasDocument: law_book_of_dresden
#            hasSection: "§ 42"
#        X_swrl_rules:
#          # associate a swrl rule with this individual
#          related_regions:
#            isA: Imp
#            rule_src: >
#              hasDirective(?ge1, X_this), X_hasInterRegionRelation_RC(?ge1, ?xirr), hasTarget(?xirr, ?ge2),
#              hasValue(?xirr, ?v), greaterThan(?v, 0.3) -> affects(X_this, ?ge2)
#
#    dir_rule4:
#        isA: Directive
#        X_hasDocumentReference_RC:
#        # this list syntax allows to specify several RC-objects at once
#            - hasDocument: law_book_of_dresden
#              hasSection: "§ 100"
#            - hasDocument: partially_redundant_law_book_of_dresden
#              hasSection: "§ 200"
#
#    dir_rule5:
#        isA: Directive
#        X_hasTesting_RC:
#            hasValue1: 10
#            hasValue2: 20
#
#
#
##
## #############################################################################
##
#
#swrl_rules:
#    top_down:
#        # Meaning: A directive which is valid in a GeograhicEntity is valid in all its parts as well
#        isA: Imp
#        rule_src: "GeographicEntity(?ge), hasPart(?ge, ?p), hasDirective(?ge, ?r) -> hasDirective(?p, ?r)"
#    applicable_doc:
#        # Meaning: All directives which reference a DirectiveSourceDocument should apply in the GeographicEntities
#        # in which the document applies
#        isA: Imp
#        rule_src: >
#                    Directive(?d), X_hasDocumentReference_RC(?d, ?dr), hasDocument(?dr, ?doc),
#                    appliesTo(?doc, ?ge) -> hasDirective(?ge, ?d)
#
#
## end of static part of knowledge
## the data below describes statements which might be subject to change
#
#owl_stipulations:
#
#    hasDirective:
#        munich:
#            - dir_rule2
#            - dir_rule3
#
#    # autogenerated role associated with the magic RelationConcept
#    X_hasInterRegionRelation_RC:
#        munich:
#          # compact specification of the other roles
#          - hasTarget: dresden
#            hasValue: 0.5
#          - hasTarget: passau
#            hasValue: 0.4
#          - hasTarget: regensburg
#            hasValue: 0.7
#          - hasTarget: leipzig
#            hasValue: 0.2
#
#
#
#      # todo: specify other values for other regions
#

